// <auto-generated />
using System;
using DailyReportApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DailyReportApp.Migrations
{
    [DbContext(typeof(DailyReportAppDbContext))]
    [Migration("20250407043602_ChangeSentToChatworkAtToString")]
    partial class ChangeSentToChatworkAtToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("DailyReportApp.Models.AppSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoSendToChatwork")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChatworkApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChatworkRoomId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("DailyReminderTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportTemplate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppSettings", (string)null);
                });

            modelBuilder.Entity("DailyReportApp.Models.DailyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSentToChatwork")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MonthlyReview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SentToChatworkAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tasks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TomorrowPlan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DailyReports", (string)null);
                });

            modelBuilder.Entity("DailyReportApp.Models.ReportTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultsContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TasksContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TomorrowPlanContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsageCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ReportTemplates", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
